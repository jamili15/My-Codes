import React from "react";
import Head from "next/head";
import SubTitle from "../ui/SubTitle";
import TimeDate from "../ui/Time&Date";
import Image from "next/image";

interface TemplateProps {
  title: string;
  description?: string;
  templateType: "default" | "custom";
  children: React.ReactNode;
}

const Template: React.FC<TemplateProps> = ({
  title,
  description,
  templateType,
  children,
}) => {
  const templateStyles = {
    default: {
      bgColor: "bg-white",
      justifyContent: "justify-center",
      flexDirection: "flex-row",
      header: "",
      footer: "",
      textColor: "text-black",
      timeDate: "",
      logoContainer: " hidden",
      logoContainer2: " hidden",
      logo: "hidden",
    },
    custom: {
      bgColor: "bg-[#0a5366]",
      justifyContent: "justify-start",
      flexDirection: " ",
      header: " absolute bottom-[112px] left-[750px] z-10 bg-white p-0",
      footer: " absolute top-5 left-10 max-md:left-40",
      textColor: "text-white",
      timeDate: "left-[76rem] top-[10rem]",
      logoContainer:
        "absolute left-[706px] top-[37rem] bg-white w-[51.7%] h-[65px]",
      logoContainer2:
        "absolute left-[706px] top-[41rem] bg-gray-300 w-[51.7%] h-[60px] rounded-b-lg",
      logo: " absolute left-[80.7rem] bottom-[109px] z-10",
    },
  };

  const {
    bgColor,
    justifyContent,
    flexDirection,
    header,
    footer,
    textColor,
    timeDate,
    logoContainer,
    logoContainer2,
    logo,
  } = templateStyles[templateType] || templateStyles.default;

  const renderMainContent = (type: string) => {
    return React.Children.map(children, (child) => {
      if (React.isValidElement(child)) {
        const { componentType } = child.props;
        if (type === componentType) {
          switch (type) {
            case "header":
              return <div className="header-wrapper">{child}</div>;
            case "footer":
              return <div className="footer-wrapper">{child}</div>;
            default:
              return child;
          }
        }
      }
      return null;
    });
  };

  return (
    <div className={`min-h-screen ${bgColor} flex flex-col`}>
      <Head>
        <title>{title}</title>
        {description && <meta name="description" content={description} />}
      </Head>

      {/* Header */}
      <header className={`${justifyContent} ${header} flex p-4 bg-[#0a5366]`}>
        {renderMainContent("header")}
      </header>

      {/* Main Content */}
      <main
        className={`flex flex-1 items-center justify-center gap-10 p-4 ${flexDirection}`}
      >
        <div className=" basis-[30%] w-full ">
          <SubTitle
            text="now serving"
            className={`text-[15px] leading-3 pl-6 uppercase ${textColor}`}
          />
          {renderMainContent("main-left")}
        </div>
        <div className=" basis-[70%] w-full relative">
          {renderMainContent("main-right")}
        </div>

        <TimeDate
          componentType={undefined}
          className={`absolute ${timeDate}`}
        />
        <div className={`${logoContainer}`}></div>
        <div className={`${logoContainer2}`}></div>
        <div className={`bg-[#0a5366] rounded-lg p-2 ${logo}`}>
          <Image
            src={"/images/rameses-logo.png"}
            alt={"etracs logo"}
            width={120}
            height={120}
            quality={100}
          />
        </div>
      </main>

      {/* Footer */}
      <footer
        className={`${justifyContent} ${footer} flex p-4 text-center bg-[#0a5366]`}
      >
        {renderMainContent("footer")}
      </footer>
    </div>
  );
};

export default Template;
